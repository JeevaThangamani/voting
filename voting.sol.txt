pragma solidity ^0.6.6;

contract election{

  struct  candidate{
      uint id;
      string name;
      uint votecount;
  }
  mapping (uint=> candidate) public candidates;
  uint public  candidatecount;
  mapping (address=>bool) public voter;

  constructor() public{
    addCandidate("JEEVA");
    addCandidate("ALAN");
  }
  function addCandidate(string memory _name) private{
    candidatecount++;
    candidates[candidatecount] = candidate(candidatecount, _name,0); 
  }
  function vote(uint _candidateid) public{
    require(!voter[msg.sender]);
    require(_candidateid > 0 && _candidateid <=candidatecount);

    voter[msg.sender] = true;
    candidates[_candidateid].votecount ++;

    emit eventvote(_candidateid);
  }
}


//contract address: 0xecCB6265073CEf39C65323B2A3790ad13545Ddd5
